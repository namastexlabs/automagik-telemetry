name: Python SDK CI

on:
  push:
    branches: [main]
    paths:
      - 'python/**'
      - '.github/workflows/python-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'python/**'
      - '.github/workflows/python-ci.yml'

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12', '3.13']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          cd python
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run ruff linter
        run: |
          cd python
          ruff check src tests

      - name: Run mypy type checking
        run: |
          cd python
          mypy src

      - name: Run pytest with coverage
        run: |
          cd python
          pytest --cov=automagik_telemetry --cov-report=html --cov-report=term-missing --cov-report=json --cov-fail-under=100 -m "not integration"

      - name: Verify 100% coverage
        run: |
          cd python
          python3 << 'EOF'
          import json
          with open('coverage.json') as f:
              data = json.load(f)
              coverage_pct = data['totals']['percent_covered']
              print(f"Coverage: {coverage_pct}%")
              assert coverage_pct == 100.0, f"Coverage is {coverage_pct}%, expected 100%"
          EOF

      - name: Upload coverage HTML report
        uses: actions/upload-artifact@v4
        if: matrix.python-version == '3.12'
        with:
          name: python-coverage-report
          path: python/htmlcov/
          retention-days: 30

      - name: Coverage comment on PR
        uses: py-cov-action/python-coverage-comment-action@v3
        if: github.event_name == 'pull_request' && matrix.python-version == '3.12'
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 100
          MINIMUM_ORANGE: 95

  lint-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install ruff
        run: pip install ruff

      - name: Check ruff formatting
        run: |
          cd python
          ruff format --check src tests

      - name: Run ruff linter
        run: |
          cd python
          ruff check src tests
